@page "/pggm-alert"

@using Blazor.Pggm.Components

<PageTitle>PGGM Alert Demo</PageTitle>

<h1>PGGM Alert Component Demo</h1>

<div class="demo-section">
  <h2>Different Alert Types</h2>

  <div class="alert-examples">
    <PggmAlert Open=true Type="@PggmAlert.AlertTypes.Informative">
      <PggmAlertTitle>This is an Informative Alert</PggmAlertTitle>
      This is an informative alert message with useful information for the user.
      <a slot="action" href="#">Learn more</a>
    </PggmAlert>

    <PggmAlert Open=true Type="@PggmAlert.AlertTypes.Warning">
      <PggmAlertTitle>This is a Warning Alert</PggmAlertTitle>
      This is a warning alert message that requires attention.
      <a slot="action" href="#">Learn more</a>
    </PggmAlert>

    <PggmAlert Open=true Type="@PggmAlert.AlertTypes.Negative">
      <PggmAlertTitle>This is a Negative Alert</PggmAlertTitle>
      This is a negative alert message indicating something went wrong.
      <a slot="action" href="#">Learn more</a>
    </PggmAlert>

    <PggmAlert Open=true Type="@PggmAlert.AlertTypes.Positive">
      <PggmAlertTitle>This is a Positive Alert</PggmAlertTitle>
      This is a positive alert message confirming a successful action.
      <a slot="action" href="#">Learn more</a>
    </PggmAlert>
  </div>
</div>


<div class="demo-section">
  <h2>Closable Alert</h2>

  <PggmAlert Type="@PggmAlert.AlertTypes.Informative" Closeable="true" CloseLabel="Close this notification" Open="true" OnDismiss="HandleAlertDismiss">
    <PggmAlertTitle>Closable Alert</PggmAlertTitle>
    This alert can be closed by clicking the close button.
    <a slot="action" href="#">Learn more</a>
  </PggmAlert>

  @if (alertDismissed)
  {
    <p class="text-muted">Alert was dismissed at @dismissTime</p>
  }
</div>




<style>
  .alert-examples {
    display: flex;
    flex-direction: column;
    gap: 2em;
  }
</style>

@code {
  private bool alertDismissed = false;
  private string dismissTime = "";

  private async Task HandleAlertDismiss()
  {
    alertDismissed = true;
    dismissTime = DateTime.Now.ToString("HH:mm:ss");
    StateHasChanged();

    // Reset after 3 seconds
    await Task.Delay(3000);
    alertDismissed = false;
    StateHasChanged();
  }
}
