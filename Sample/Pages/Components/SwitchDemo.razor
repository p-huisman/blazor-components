@page "/pggm-switch"

<PageTitle>PGGM Switch</PageTitle>

<PggmHeader Level="1">PggmSwitch Component Demo</PggmHeader>

<p>This page demonstrates the PGGM Switch component with various configurations, states, and event handling.</p>

<div class="demo-section">
    <PggmHeader Level="2">Basic Switch</PggmHeader>
    <p>Notifications Enabled: <strong>@(notificationsEnabled ? "On" : "Off")</strong></p>
    
    <label>
        <PggmSwitch Checked="@notificationsEnabled" 
                    CheckedChanged="@(value => notificationsEnabled = value)">
        </PggmSwitch>
        Enable Notifications
    </label>
</div>

<div class="demo-section">
    <PggmHeader Level="2">Switch with Value and Label</PggmHeader>
    <p>Marketing Emails: <strong>@(marketingEmailsEnabled ? "Subscribed" : "Unsubscribed")</strong></p>
    
    <label>
        <PggmSwitch Value="enabled" 
                    Checked="@marketingEmailsEnabled" 
                    CheckedChanged="@(value => marketingEmailsEnabled = value)">
        </PggmSwitch>
        Subscribe to marketing emails
    </label>
</div>

<div class="demo-section">
    <PggmHeader Level="2">Disabled Switch</PggmHeader>
    <p>This switch is disabled and cannot be toggled.</p>
    
    <PggmSwitch Checked="true" Disabled="true">
    </PggmSwitch>
    
    <br /><br />
    
    <PggmSwitch Checked="false" Disabled="true">
    </PggmSwitch>
</div>

<div class="demo-section">
    <PggmHeader Level="2">Multiple Switches with Labels</PggmHeader>
    
    <div class="switch-group">
        <label>
            <PggmSwitch Checked="@primarySwitchValue" 
                        CheckedChanged="@(value => primarySwitchValue = value)">
            </PggmSwitch>
            Primary Switch
        </label>
        
        <label>
            <PggmSwitch Checked="@secondarySwitchValue" 
                        CheckedChanged="@(value => secondarySwitchValue = value)">
            </PggmSwitch>
            Secondary Switch
        </label>
        
        <label>
            <PggmSwitch Checked="@successSwitchValue" 
                        CheckedChanged="@(value => successSwitchValue = value)">
            </PggmSwitch>
            Third Switch
        </label>
    </div>
</div>

<div class="demo-section">
    <PggmHeader Level="2">Event Handling</PggmHeader>
    <p>Last Event: <strong>@lastEvent</strong></p>
    
    <label>
        <PggmSwitch Checked="@eventTestValue" 
                    CheckedChanged="@HandleValueChange"
                    OnFocus="@HandleFocus"
                    OnBlur="@HandleBlur">
        </PggmSwitch>
        Event Test Switch
    </label>
</div>

@code {
    private bool notificationsEnabled = true;
    private bool marketingEmailsEnabled = false;
    private bool primarySwitchValue = true;
    private bool secondarySwitchValue = false;
    private bool successSwitchValue = true;
    private bool eventTestValue = false;
    private string lastEvent = "None";

    private void HandleValueChange(bool value)
    {
        eventTestValue = value;
        lastEvent = $"Value changed to: {(value ? "On" : "Off")} at {DateTime.Now:HH:mm:ss}";
    }

    private void HandleFocus(FocusEventArgs args)
    {
        lastEvent = $"Switch focused at {DateTime.Now:HH:mm:ss}";
    }

    private void HandleBlur(FocusEventArgs args)
    {
        lastEvent = $"Switch blurred at {DateTime.Now:HH:mm:ss}";
    }
}

<style>
    .demo-section {
        margin-bottom: 2rem;
        padding: 1rem;
        border: 1px solid #e0e0e0;
        border-radius: 4px;
    }
    
    .demo-section h4 {
        margin-top: 0;
        color: #333;
    }
    
    .demo-section p {
        margin-bottom: 1rem;
    }
    
    .demo-section p strong {
        color: #0066cc;
    }
    
    .switch-group {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }
    
    .switch-group label,
    .demo-section label {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-weight: normal;
        cursor: pointer;
    }
    
    .switch-group > * {
        align-self: flex-start;
    }
</style>
