@page "/pggm-label"

@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components

<PageTitle>PGGM Label</PageTitle>

<PggmHeader Level="1">PGGM Label</PggmHeader>

<p>This page demonstrates the PGGM Label component with various configurations and use cases.</p>

<section class="demo-section">
    <PggmHeader Level="2">Basic PggmLabel Usage</PggmHeader>
    <p>Basic labels associated with form controls using the <code>For</code> attribute:</p>

    <div class="form-example">
        <div class="form-group">
            <PggmLabel For="basic-text-input">Basic Text Input:</PggmLabel>
            <PggmInput id="basic-text-input" Type="text" @bind-value="basicText" Placeholder="Enter some text..." />
        </div>

        <div class="form-group">
            <PggmLabel For="basic-email-input">Email Address:</PggmLabel>
            <PggmInput id="basic-email-input" Type="email" @bind-value="emailValue" Placeholder="user@example.com" />
        </div>

        <div class="form-group">
            <PggmLabel For="basic-number-input">Number Input:</PggmLabel>
            <PggmInput id="basic-number-input" Type="number" @bind-value="numberValue" Min="0" Max="100" />
        </div>
    </div>
</section>

<section class="demo-section">
    <PggmHeader Level="2">Different Input Types</PggmHeader>
    <p>PggmLabel with various HTML input types:</p>

    <div class="form-example">
        <div class="form-group">
            <PggmLabel For="password-input">Password:</PggmLabel>
            <PggmInput id="password-input" Type="password" @bind-Value="passwordValue" />
        </div>

        <div class="form-group">
            <PggmLabel For="date-input">Date:</PggmLabel>
            <PggmInput id="date-input" Type="date" @bind-Value="dateValue" />
        </div>

        <div class="form-group">
            <PggmLabel For="textarea-input">Textarea:</PggmLabel>
            <textarea id="textarea-input" @bind="textareaValue" class="form-control" rows="3" placeholder="Enter a longer text..."></textarea>
        </div>

        <div class="form-group">
            <PggmLabel For="select-input">Select Option:</PggmLabel>
            <select id="select-input" @bind="selectValue" class="form-control">
                <option value="">Choose an option...</option>
                <option value="option1">Option 1</option>
                <option value="option2">Option 2</option>
                <option value="option3">Option 3</option>
            </select>
        </div>
    </div>
</section>

<section class="demo-section">
    <PggmHeader Level="2">Checkbox and Radio Groups</PggmHeader>
    <p>PggmLabel with checkbox and radio button groups:</p>

    <div class="form-example">
        <div class="form-group">
            <PggmLabel>Checkbox Options:</PggmLabel>
            <div class="checkbox-group">
                <div class="checkbox-item">
                    <input id="checkbox1" type="checkbox" @bind="checkbox1" />
                    <PggmLabel For="checkbox1">Option 1</PggmLabel>
                </div>
                <div class="checkbox-item">
                    <input id="checkbox2" type="checkbox" @bind="checkbox2" />
                    <PggmLabel For="checkbox2">Option 2</PggmLabel>
                </div>
                <div class="checkbox-item">
                    <input id="checkbox3" type="checkbox" @bind="checkbox3" />
                    <PggmLabel For="checkbox3">Option 3</PggmLabel>
                </div>
            </div>
        </div>

        <div class="form-group">
            <PggmLabel>Radio Button Group:</PggmLabel>
            <div class="radio-group">
                <div class="radio-item">
                    <input id="radio1" type="radio" name="radioGroup" value="radio1" @onchange="@((e) => radioValue = e.Value?.ToString() ?? "")" />
                    <PggmLabel For="radio1">Radio Option 1</PggmLabel>
                </div>
                <div class="radio-item">
                    <input id="radio2" type="radio" name="radioGroup" value="radio2" @onchange="@((e) => radioValue = e.Value?.ToString() ?? "")" />
                    <PggmLabel For="radio2">Radio Option 2</PggmLabel>
                </div>
                <div class="radio-item">
                    <input id="radio3" type="radio" name="radioGroup" value="radio3" @onchange="@((e) => radioValue = e.Value?.ToString() ?? "")" />
                    <PggmLabel For="radio3">Radio Option 3</PggmLabel>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="demo-section">
    <PggmHeader Level="2">Standalone Labels</PggmHeader>
    <p>PggmLabel components without the <code>For</code> attribute, used as standalone labels:</p>

    <div class="form-example">
        <div class="form-group">
            <PggmLabel>Section Header Label</PggmLabel>
            <p>This is a standalone label that doesn't associate with any specific input element.</p>
        </div>

        <div class="form-group">
            <PggmLabel>Required Fields Information</PggmLabel>
            <p>All fields marked with <span style="color: red;">*</span> are required.</p>
        </div>

        <div class="form-group">
            <PggmLabel>Current Form Values:</PggmLabel>
            <ul>
                <li>Basic Text: @(string.IsNullOrEmpty(basicText) ? "Not set" : basicText)</li>
                <li>Email: @(string.IsNullOrEmpty(emailValue) ? "Not set" : emailValue)</li>
                <li>Number: @(string.IsNullOrEmpty(numberValue) ? "Not set" : numberValue)</li>
                <li>Date: @(string.IsNullOrEmpty(dateValue) ? "Not set" : dateValue)</li>
                <li>Selected Option: @(string.IsNullOrEmpty(selectValue) ? "Not selected" : selectValue)</li>
                <li>Radio Selection: @(string.IsNullOrEmpty(radioValue) ? "Not selected" : radioValue)</li>
            </ul>
        </div>
    </div>
</section>

<section class="demo-section">
    <PggmHeader Level="2">Accessibility Features</PggmHeader>
    <p>Demonstrating accessibility features with screen reader friendly labels:</p>

    <div class="form-example">
        <div class="form-group">
            <PggmLabel For="accessible-input" AdditionalAttributes="@(new Dictionary<string, object> { {"aria-describedby", "accessible-help"} })">
                Accessible Input with Description:
            </PggmLabel>
            <PggmInput id="accessible-input" Type="text" @bind-Value="accessibleText" aria-describedby="accessible-help" />
            <small id="accessible-help" class="form-text text-muted">This input has additional accessibility information.</small>
        </div>

        <div class="form-group">
            <PggmLabel For="required-input">Required Field <span style="color: red;">*</span>:</PggmLabel>
            <PggmInput id="required-input" Type="text" @bind-Value="requiredText" Required="true" />
        </div>
    </div>
</section>

@code {
    // Basic form values
    private string basicText = "";
    private string emailValue = "";
    private string numberValue = "";
    private string passwordValue = "";
    private string dateValue = "";
    private string textareaValue = "";
    private string selectValue = "";

    // Checkbox values (kept as bool for standard HTML checkboxes)
    private bool checkbox1 = false;
    private bool checkbox2 = false;
    private bool checkbox3 = false;

    // Radio value
    private string radioValue = "";

    // Accessibility values
    private string accessibleText = "";
    private string requiredText = "";
}

<style>
    .demo-section {
        margin-bottom: 3rem;
        padding-bottom: 2rem;
        border-bottom: 1px solid #e0e0e0;
    }

    .demo-section:last-child {
        border-bottom: none;
    }

    .demo-section h2 {
        color: #333;
        margin-bottom: 1rem;
        font-size: 1.5rem;
    }

    .demo-section p {
        margin-bottom: 1.5rem;
        color: #666;
        line-height: 1.5;
    }

    .form-example {
        background-color: #f8f9fa;
        padding: 2rem;
        border-radius: 8px;
        border: 1px solid #dee2e6;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-group:last-child {
        margin-bottom: 0;
    }

    .form-control {
        width: 100%;
        padding: 0.5rem;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 1rem;
        margin-top: 0.25rem;
    }

    .form-control:focus {
        outline: none;
        border-color: #007bff;
        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    }

    .checkbox-group,
    .radio-group {
        margin-top: 0.5rem;
    }

    .checkbox-item,
    .radio-item {
        display: flex;
        align-items: center;
        margin-bottom: 0.5rem;
    }

    .checkbox-item input,
    .radio-item input {
        margin-right: 0.5rem;
        margin-top: 0;
    }

    .checkbox-item label,
    .radio-item label {
        margin: 0;
        cursor: pointer;
    }

    code {
        background-color: #f1f1f1;
        padding: 0.2rem 0.4rem;
        border-radius: 3px;
        font-family: 'Courier New', monospace;
    }

    .form-text {
        font-size: 0.875rem;
        margin-top: 0.25rem;
    }

    .text-muted {
        color: #6c757d;
    }

    @@media (max-width: 768px) {
        .form-example {
            padding: 1rem;
        }

        .demo-section h2 {
            font-size: 1.3rem;
        }

        .checkbox-item,
        .radio-item {
            flex-direction: column;
            align-items: flex-start;
        }

        .checkbox-item input,
        .radio-item input {
            margin-bottom: 0.25rem;
        }
    }
</style>
