@inherits PggmEventComponentBase
@namespace Blazor.Pggm.Components
@using Microsoft.AspNetCore.Components.Web

<pggm-accordion-item @ref="ElementRef" @attributes="GetAttributes()">
  @ChildContent
</pggm-accordion-item>

@code {
  protected override string TagName => "pggm-accordion-item";

  /// <summary>
  /// Whether the accordion item is open/expanded
  /// </summary>
  [Parameter] public bool Open { get; set; }

  /// <summary>
  /// Whether the accordion item is disabled
  /// </summary>
  [Parameter] public bool Disabled { get; set; }

  /// <summary>
  /// Event callback fired when the accordion item is toggled (opened or closed)
  /// </summary>
  [Parameter] public EventCallback<EventArgs> OnAccordionItemToggle { get; set; }

  protected override IEnumerable<string> GetEventNames()
  {
    if (OnAccordionItemToggle.HasDelegate)
    {
      yield return "accordionItemToggle";
    }
  }

  protected override Dictionary<string, Func<object?, Task>> EventHandlers => new()
  {
    ["accordionItemToggle"] = async (_) => {
      if (OnAccordionItemToggle.HasDelegate)
      {
        await OnAccordionItemToggle.InvokeAsync(EventArgs.Empty);
      }
    }
  };

  protected override Dictionary<string, object> GetAttributes()
  {
    var attributes = base.GetAttributes();

    if (Open)
    {
      attributes["open"] = true;
    }

    if (Disabled)
    {
      attributes["disabled"] = true;
    }

    return attributes;
  }
}